extends layout

block content
	//- h1= title
	//- p Welcome to #{title}
	//- p What is up
	div.jumbotron
		if (req.isAuthenticated())
			h2= "Welcome, " + req.user.username
		else
			h2= "Welcome to Piqued"
			p
				a.btn.btn-lg.btn-success(href="/signup") Signup

	div.row
		div.col-md-10.centered.text-center
			div#questionContainer 
				each question in questions
					- var type = question.multiple ? 'checkbox' : 'radio'
					if(req.user && (question.answered.indexOf(req.user._id) != -1))
						div.text-left.question.answered(id=question._id)
							h3.topfix= question.question
							p= 'author: ' + question.authorId.username
							if(question.answers.length)
								each answer in question.answers
									input(type=type, name=question._id, value=answer._id, checked=fs.inAnswers(answer.answered, req.user._id), disabled)
									!= ' ' + answer.answer
									span 
										if(answer.answered.length)
											each user_answered in answer.answered
												= ' ' + user_answered.username
									br 
					else
						if(req.user && (question.askedTo.indexOf(req.user._id) != -1))
							div.text-left.question(id=question._id)
								h3.topfix= question.question
								p= 'author: ' + question.authorId.username
								if(question.answers.length)
									each answer in question.answers
										input(type=type, name=question._id, value=answer._id)
										!= ' ' + answer.answer
										span
										br 		
block scripts
	script(src="/socket.io/socket.io.js")
	script(type='text/javascript').
		var socket = io.connect();
		var session;
		// on document ready
		$(function(){
			socket.emit('ready')
			socket.on('sessiondata', function(data){
				session = data;
			})
			socket.on('answer_return', function(data){
				$('#'+data._id).addClass('answered')
				for(var answer=0; answer < data.answers.length; answer++)
				{
					console.log(data.answers[answer])
					$("input[value='"+data.answers[answer]._id+"']").prop('disabled', true)
					for(var user=0; user<data.answers[answer].answered.length; user++)
					{
						$("input[value='"+data.answers[answer]._id+"']+span, input[value='"+data.answers[answer]._id+"']+img+span").append(" "+data.answers[answer].answered[user].username+" ")
					}
				}
				console.log(data);
			})
			socket.on('answer_append', function(data){
				if($('#'+data.question).hasClass('answered'))
				{
					$("input[value='"+data.answer+"']+span").append(" "+data.username+" ")
				}
				console.log(data);
			})
			socket.on('question_append', function(data){
				var question = data.question
				console.log("receiving!! \n\n")
				console.log(data);
				if(question.askedTo.indexOf(session.user) != -1)
				{
					var question_html='<div id="'+question._id+'" class="text-left question"><h3 class="topfix">'+question.question+'</h3><p>author: '+question.authorId.username+'</p>';
					for(var i = 0; i < question.answers.length; i++)
					{
						question_html+='<input type="radio" name="'+question._id+'" value="'+question.answers[i]._id+'"> '+question.answers[i].answer+'<span></span><br>'
					}
					question_html+='</div>';
					$("#questionContainer").prepend(question_html)
				}
			})
			//- $('#questionContainer').on('click', '#questionContainer input', function(){
			//- 	console.log("clicked")
			//- 	socket.emit('answer', {user: req.user.username})
			//- })
			$('#questionContainer').on('click', 'input', function(){
				socket.emit('answer', {user_id: session.user, question_id: $(this).attr("name"), answer_id: $(this).val()})
			})
			// $('#questionContainer input').click(function(){
			// 	socket.emit('answer', {user_id: session.user, question_id: $(this).attr("name"), answer_id: $(this).val()})
			// })
		})
